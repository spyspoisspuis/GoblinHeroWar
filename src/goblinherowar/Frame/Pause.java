/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package goblinherowar.Frame;

import goblinherowar.API.GameManager;
import goblinherowar.API.SceneManager;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.Timer;

/**
 *
 * @author peeravich.c
 */
public class Pause extends Scene {

    private static int[] mark = new int[10];
    private static Timer[] tim;
    private static Timer cnt;
    /**
     * Creates new form Pause
     */
    
    // <editor-fold defaultstate="collapsed" desc="Pause Constructor">  
    public Pause() {
        initComponents();
        this.setBackground(new Color(0,0,0,50));
        this.setOpaque(false);
        
        greybg.setOpaque(false);
        greybg.setVisible(true);
        pause.setOpaque(false);
        pause.setVisible(true);
        
        retry.setOpaque(false);
        retry.setContentAreaFilled(false);
        retry.setBorderPainted(false);
        
        resume.setOpaque(false);
        resume.setContentAreaFilled(false);
        resume.setBorderPainted(false);
        
        exit.setOpaque(false);
        exit.setContentAreaFilled(false);
        exit.setBorderPainted(false);
    }
    //</editor-fold>
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exit = new javax.swing.JButton();
        resume = new javax.swing.JButton();
        retry = new javax.swing.JButton();
        pause = new javax.swing.JLabel();
        greybg = new javax.swing.JLabel();

        setLayout(null);

        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goblinherowar/Frame/Component/pauseSceneComponent/exit.png"))); // NOI18N
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        add(exit);
        exit.setBounds(560, 240, 140, 140);

        resume.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goblinherowar/Frame/Component/pauseSceneComponent/resume.png"))); // NOI18N
        resume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumeActionPerformed(evt);
            }
        });
        add(resume);
        resume.setBounds(410, 320, 140, 140);

        retry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goblinherowar/Frame/Component/pauseSceneComponent/retry.png"))); // NOI18N
        retry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retryActionPerformed(evt);
            }
        });
        add(retry);
        retry.setBounds(250, 240, 140, 140);

        pause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goblinherowar/Frame/Component/pauseSceneComponent/pause.png"))); // NOI18N
        add(pause);
        pause.setBounds(150, 20, 670, 500);

        greybg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goblinherowar/Frame/Component/pauseSceneComponent/transparentgrey.png"))); // NOI18N
        add(greybg);
        greybg.setBounds(0, 0, 960, 540);
    }// </editor-fold>//GEN-END:initComponents

    private void retryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retryActionPerformed
        // TODO add your handling code here:
        MainFrame.setSceneVisible(9,false);
        MainFrame.midResetScene();
    }//GEN-LAST:event_retryActionPerformed

    private void resumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resumeActionPerformed
        // TODO add your handling code here:
        GameManager.resumeGame();
        MainFrame.setSceneVisible(11,false);
        MainFrame.setKeyButtonEnabled(true);
        for(int i = 0;i<mark.length;i++){
            if(mark[i] == -1) continue;
            tim[mark[i]].start();
        }
        if(cnt != null) cnt.start();
       // MainFrame.addScene(SceneManager.currentIdx,0);
    }//GEN-LAST:event_resumeActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        MainFrame.setSceneVisible(9,false);
        MainFrame.setSceneVisible(SceneManager.currentIdx, false);
        MainFrame.midResetScene();
        MainFrame.setSceneVisible(0,true);
        GameManager.exitGame();
    }//GEN-LAST:event_exitActionPerformed
    
    public static void pause(Timer[] t,int[] keyInterrupt,int[] keyTimer){
        tim = t;
        for(int i = 0;i<mark.length;i++) {
            mark[i] = -1;
        }
        for (int i =0;i<keyInterrupt.length;i++){
            if(keyTimer[i] == -1) continue;
            t[keyTimer[i]].stop();
            keyInterrupt[i] = keyTimer[i];
            mark[i] = keyTimer[i];
        }
    }
    public static void pause(Timer[] t,int[] keyInterrupt,int[] keyTimer,Timer cntDown){
        cnt = cntDown;
        cnt.stop();
        tim = t;
        for(int i = 0;i<mark.length;i++) {
            mark[i] = -1;
        }
        for (int i =0;i<keyInterrupt.length;i++){
            if(keyTimer[i] == -1) continue;
            t[keyTimer[i]].stop();
            keyInterrupt[i] = keyTimer[i];
            mark[i] = keyTimer[i];
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exit;
    private javax.swing.JLabel greybg;
    private javax.swing.JLabel pause;
    private javax.swing.JButton resume;
    private javax.swing.JButton retry;
    // End of variables declaration//GEN-END:variables
}
